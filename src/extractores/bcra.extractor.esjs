import axios desde 'axios'

process.env['NODE_TLS_REJECT_UNAUTHORIZED'] = 0

exportar asincrono funcion extraerBcra(serie, desde, hasta) {
  const intentos = 3

  para (var intento = 0; intento < intentos; intento++) {
    intentar {
      const respuesta = esperar obtenerRespuesta(serie, desde, hasta)

      retornar respuesta
    } capturar (error) {
      consola.error('Error al extraer datos del BCRA', error)
    }

    esperar crear Promesa(resuelve => {
      setTimeout(resuelve, 700)
    })
  }

  lanzar crear Error(
    `No se pudo extraer los datos del BCRA para la serie ${serie}`,
  )
}

asincrono funcion obtenerRespuesta(serie, desde, hasta) {
  const url =
    'http://www.bcra.gob.ar/PublicacionesEstadisticas/Principales_variables_datos.asp'

  const respuesta = esperar fetch(url, {
    method: 'POST',
    body: crear URLSearchParams({
      fecha_desde: desde,
      fecha_hasta: hasta,
      primeravez: '1',
      serie: serie,
    }),
  })

  retornar respuesta.text()
}

exportar asincrono funcion extraerBcraApi(serie, desde, hasta) {
  const intentos = 3

  para (var intento = 0; intento < intentos; intento++) {
    const url = `https://api.bcra.gob.ar/estadisticas/v3.0/Monetarias/${serie}?desde=${desde}&hasta=${hasta}`

    intentar {
      const respuesta = esperar axios.get(url)

      retornar respuesta.data.results
    } capturar (error) {
      consola.error('BCRA API error', {
        serie,
        desde,
        hasta,
        url,
        error: error.message,
      })
    }

    esperar crear Promesa(resuelve => {
      setTimeout(resuelve, 700)
    })
  }

  lanzar crear Error(
    `No se pudo extraer los datos del BCRA para la serie ${serie}`,
  )
}
